#!/bin/bash
# ----------------------------------------------------------------------------
# Nice Welcome Banner (motd)
# Based on https://github.com/obihann/archey-osx
# ----------------------------------------------------------------------------


# Detect the packager.
if [ -x /usr/local/bin/brew ]; then
  packager=homebrew
elif command -v port >/dev/null; then
  packager=macports
else
  packager=none
fi

# Get the command line options
opt_nocolor=f
opt_force_color=f
for arg in "$@"
do
  case "${arg}" in
    -m|--macports)
      packager=macports
      ;;
    -b|--nocolor)
      opt_nocolor=t
      ;;
    -c|--color)
      opt_nocolor=f
      opt_force_color=t
      ;;
    -h|--help)
      echo "Usage: $0 [options]"
      echo
      echo "  -m --macports Use MacPorts as package system (default packager: ${packager})."
      echo "  -b --nocolor  Turn color off."
      echo "  -c --color    Force the color on (overrides --nocolor)."
      exit 0
      ;;
    *)
      echo "Unknown argument: $1" 1>&2
      echo "For help, use: $0 --help" 1>&2
      exit 1
      ;;
  esac
done

# Set up colors if:
# * stdout is a tty
# * the user hasn't turned it off
# * or if we're forcing color
if [[ ( -t 1  && "${opt_nocolor}" = f) || "${opt_force_color}" = t ]]
then
  RED=$(tput       setaf 1 2>/dev/null)
  GREEN=$(tput     setaf 2 2>/dev/null)
  YELLOW=$(tput    setaf 3 2>/dev/null)
  BLUE=$(tput      setaf 4 2>/dev/null)
  PURPLE=$(tput    setaf 5 2>/dev/null)
  textColor=$(tput setaf 6 2>/dev/null)
  normal=$(tput    sgr0 2>/dev/null)
fi

# System Variables
user=$(whoami)
hostname=$(hostname | sed 's/.local//g')
pwd=$(pwd)
ip=$(ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p')
distro="$(sw_vers -productVersion) ($(sw_vers -buildVersion))"
uptime=$(uptime | sed 's/.*up \([^,]*\), .*/\1/')
cpu=$(sysctl -n machdep.cpu.brand_string)
battery=$(ioreg -l | grep -i capacity | tr '\n' ' | ' | awk '{printf("%.2f%%", $10/$5 * 100)}')

# removes (R) and (TM) from the CPU name so it fits in a standard 80 window
cpu=$(echo "$cpu" | awk '$1=$1' | sed 's/([A-Z]\{1,2\})//g')

ram="$(( $(sysctl -n hw.memsize) / 1024 ** 3  )) GB"
disk=$(df | head -2 | tail -1 | awk '{print $5}')

#Docker
if [ -x /usr/local/bin/docker ]; then
  dockerCli=$(docker --version | sed 's/.*version \([^,]*\), .*/\1/')
  dockerMachine=$(docker-machine --version | sed 's/.*version \([^,]*\), .*/\1/')
  dockerCompose=$(docker-compose --version | sed 's/.*version \([^,]*\), .*/\1/')
  dockerText="${textColor}Docker:${normal} ${dockerCli}${normal} ${textColor}|${normal} ${dockerCompose}${normal} ${textColor}|${normal} ${dockerMachine}${normal}"
else
  dockerText="${textColor}Docker: ${RED}not installed${normal}"
fi

userText="${textColor}User:${normal} ${user}@${hostname}${normal}"
pwdText="${textColor}Home:${normal} ${pwd}${normal}"
distroText="${textColor}Mac OS X:${normal} ${distro}${normal}"
uptimeText="${textColor}Uptime:${normal} ${uptime}${normal}"
ipText="${textColor}IP Address:${normal} ${ip}${normal}"
cpuText="${textColor}CPU:${normal} ${cpu}${normal}"
memoryText="${textColor}Memory:${normal} ${ram}${normal}"
diskText="${textColor}Disk:${normal} ${disk}${normal}"
batteryText="${textColor}Battery:${normal} ${battery}${normal}"

if [ -a "${HOME}/.config/archey-logo" ]
  then
  source "${HOME}/.config/archey-logo"
else
# The ${foo#  } is a cheat so that it lines up here as well
# as when run.
  echo -e "
${GREEN#  }                 ###                  $userText
${GREEN#  }               ####                   $pwdText
${GREEN#  }               ###                    $distroText
${GREEN#  }       #######    #######             $cpuText
${YELLOW# }     ######################           $memoryText
${YELLOW# }    #####################             $diskText
${RED#    }    ####################              $batteryText
${RED#    }    ####################              $uptimeText
${RED#    }    #####################             $ipText
${PURPLE# }     ######################           $dockerText
${PURPLE# }      ####################            
${BLUE#   }        ################              
${BLUE#   }         ####     #####               
${normal}
"
fi
